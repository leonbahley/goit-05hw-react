{"version":3,"file":"static/js/33.1d5830c5.chunk.js","mappings":"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","sources":["API/API.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const APIKey = '0729fc5ff166ac1f365f9bc4f7e8ce78';\n\nexport const fetchCast = id => {\n  return fetch(\n    `  https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKey}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Something went wrong');\n  });\n};\n\nexport const fetchReviews = id => {\n  return fetch(\n    `  https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${APIKey}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Something went wrong');\n  });\n};\n\nexport const fetchMovieDetails = id => {\n  return fetch(\n    `  https://api.themoviedb.org/3/movie/${id}?api_key=${APIKey}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Something went wrong');\n  });\n};\n\nexport const fetchMovieList = () => {\n  return fetch(\n    `   https://api.themoviedb.org/3/trending/all/day?api_key=${APIKey}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Something went wrong');\n  });\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieImg = styled.img`\n  width: 300px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n  font-size: 15px;\n  &:hover {\n    color: grey;\n  }\n  &.active {\n    color: grey;\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n  font-size: 15px;\n  margin-bottom: 3px;\n  display: flex;\n  align-items: center;\n  gap: 3px;\n  &:hover {\n    color: grey;\n  }\n`;\n","import { Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Wrapper, MovieImg, StyledLink, BackLink } from './MovieDetails.styled';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { fetchMovieDetails } from 'API/API';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const { id } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    fetchMovieDetails(id)\n      .then(\n        ({ poster_path, original_title, overview, genres, vote_average }) => {\n          setMovieDetails({\n            img: `https://image.tmdb.org/t/p/w400${poster_path}`,\n            movieName: original_title,\n            overview: overview,\n\n            score: vote_average,\n          });\n          if (genres.length !== 0) {\n            setGenres(genres.map(genre => genre.name));\n          } else {\n            setGenres(['There are no genres for this movie']);\n          }\n        }\n      )\n      .catch(err => alert(err));\n  }, [id]);\n  const { img, movieName, overview, score } = movieDetails;\n\n  return (\n    <>\n      <Wrapper\n        style={{\n          flexDirection: 'row',\n          gap: 15,\n          borderBottom: '1px solid black',\n          paddingBottom: 5,\n        }}\n      >\n        <Wrapper>\n          <BackLink to={backLinkHref}>\n            <AiOutlineArrowLeft /> Back to movies\n          </BackLink>\n\n          <MovieImg\n            src={\n              img !== 'https://image.tmdb.org/t/p/w400null'\n                ? img\n                : 'https://via.placeholder.com/400x600'\n            }\n            alt={movieName}\n          />\n        </Wrapper>\n\n        <Wrapper>\n          <h1>{movieName}</h1>\n          <p>User score: {score}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.join(', ')}</p>\n        </Wrapper>\n      </Wrapper>\n      <h3>Additional info</h3>\n      <StyledLink\n        style={{ marginRight: 5 }}\n        to=\"cast\"\n        state={{ from: location.state?.from }}\n      >\n        Cast\n      </StyledLink>\n      <StyledLink to=\"reviews\" state={{ from: location.state?.from }}>\n        Reviews\n      </StyledLink>\n      <Suspense fallback={<div>Loading info...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["APIKey","fetchCast","id","fetch","then","response","ok","json","Error","fetchReviews","fetchMovieDetails","fetchMovieList","Wrapper","styled","MovieImg","StyledLink","NavLink","BackLink","MovieDetails","location","useLocation","backLinkHref","state","from","useParams","useState","movieDetails","setMovieDetails","genres","setGenres","useEffect","poster_path","original_title","overview","vote_average","img","movieName","score","length","map","genre","name","catch","err","alert","style","flexDirection","gap","borderBottom","paddingBottom","to","src","alt","join","marginRight","Suspense","fallback"],"sourceRoot":""}