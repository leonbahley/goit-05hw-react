{"version":3,"file":"static/js/779.b7be3a83.chunk.js","mappings":"8OAAA,IAAMA,EAAS,mCAEFC,EAAY,SAAAC,GACvB,OAAOC,MAAM,wCAAD,OAC8BD,EAD9B,4BACoDF,IAC9DI,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,uBACjB,GACF,EAEYC,EAAe,SAAAP,GAC1B,OAAOC,MAAM,wCAAD,OAC8BD,EAD9B,4BACoDF,IAC9DI,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,uBACjB,GACF,EAEYE,EAAoB,SAAAR,GAC/B,OAAOC,MAAM,wCAAD,OAC8BD,EAD9B,oBAC4CF,IACtDI,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,uBACjB,GACF,EAEYG,EAAiB,WAC5B,OAAOR,MAAM,4DAAD,OACkDH,IAC5DI,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,uBACjB,GACF,C,6GC3CYI,E,OAAOC,GAAAA,GAAH,6C,kBCKF,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAnD,eAAOC,EAAP,KAAqBC,EAArB,KACQf,GAAOgB,EAAAA,EAAAA,MAAPhB,GAeR,OAbAiB,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAaP,GACVE,MAAK,YAAkB,IAAfgB,EAAc,EAAdA,QACPH,EACEG,EAAQC,KAAI,SAAAC,GAAI,MAAK,CACnBC,KAAMD,EAAKE,OACXC,QAASH,EAAKG,QACdvB,GAAIoB,EAAKpB,GAHK,IAMnB,IACAwB,OAAM,SAAAC,GAAG,OAAIC,MAAMD,EAAV,GACb,GAAE,CAACzB,KAEF,8BAC2B,IAAxBc,EAAaa,QACZ,SAACjB,EAAD,UACGI,EAAaK,KAAI,gBAAGE,EAAH,EAAGA,KAAME,EAAT,EAASA,QAASvB,EAAlB,EAAkBA,GAAlB,OAChB,2BACE,0BACE,iBAAM4B,MAAO,CAAEC,WAAY,KAA3B,sBADF,IACqDR,MAErD,uBAAIE,MAJG,GAAKvB,EADE,OAUpB,kEAIP,C","sources":["API/API.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const APIKey = '0729fc5ff166ac1f365f9bc4f7e8ce78';\n\nexport const fetchCast = id => {\n  return fetch(\n    `  https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKey}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Something went wrong');\n  });\n};\n\nexport const fetchReviews = id => {\n  return fetch(\n    `  https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${APIKey}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Something went wrong');\n  });\n};\n\nexport const fetchMovieDetails = id => {\n  return fetch(\n    `  https://api.themoviedb.org/3/movie/${id}?api_key=${APIKey}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Something went wrong');\n  });\n};\n\nexport const fetchMovieList = () => {\n  return fetch(\n    `   https://api.themoviedb.org/3/trending/all/day?api_key=${APIKey}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Something went wrong');\n  });\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  list-style: none;\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List } from 'components/Reviews/Reviews.styled';\nimport { fetchReviews } from 'API/API';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState([{}]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchReviews(id)\n      .then(({ results }) => {\n        setMovieReviews(\n          results.map(item => ({\n            name: item.author,\n            content: item.content,\n            id: item.id,\n          }))\n        );\n      })\n      .catch(err => alert(err));\n  }, [id]);\n  return (\n    <>\n      {movieReviews.length !== 0 ? (\n        <List>\n          {movieReviews.map(({ name, content, id }) => (\n            <li key={'' + id}>\n              <p>\n                <span style={{ fontWeight: 500 }}>Author: </span> {name}\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <p>We do not have reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["APIKey","fetchCast","id","fetch","then","response","ok","json","Error","fetchReviews","fetchMovieDetails","fetchMovieList","List","styled","Reviews","useState","movieReviews","setMovieReviews","useParams","useEffect","results","map","item","name","author","content","catch","err","alert","length","style","fontWeight"],"sourceRoot":""}